-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

module(...)

function physicsData(scale)
	local physics = { data =
	{ 
		
		["player"] = {
			
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   36.5, 291  ,  87.5, 251  ,  87.5, 284  ,  34.5, 339  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   87.5, 251  ,  36.5, 291  ,  3, 258.5  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   413.5, 181  ,  457.5, 82  ,  499.5, 134  ,  458, 189.5  ,  410, 200.5  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   337.5, 49  ,  394.5, 176  ,  285, -0.5  ,  286, -0.5  ,  320.5, 15  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   339.5, 177  ,  394.5, 176  ,  312, 202.5  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   510, 212.5  ,  458, 189.5  ,  499.5, 134  ,  528, 205.5  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   413.5, 181  ,  394.5, 176  ,  337.5, 49  ,  406.5, 56  ,  457.5, 82  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   290, 53.5  ,  291.5, 180  ,  87.5, 284  ,  87.5, 251  ,  183.5, 118  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   290, 53.5  ,  339.5, 177  ,  291.5, 180  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   290, 53.5  ,  285, -0.5  ,  394.5, 176  ,  339.5, 177  }
				}  
		}
		
		, 
		["shark"] = {
			
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   383.5, 26  ,  170, 931.5  ,  -0.5, 710  ,  4.5, 620  ,  259, 50.5  ,  317, -0.5  ,  358, -0.5  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   -0.5, 710  ,  170, 931.5  ,  91, 895.5  ,  15, 827.5  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   537.5, 868  ,  448.5, 926  ,  170, 931.5  ,  383.5, 26  ,  527.5, 343  ,  584.5, 646  ,  581.5, 773  ,  568, 831.5  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   122.5, 271  ,  259, 50.5  ,  4.5, 620  ,  52.5, 436  }
				}  
		}
		
	} }

	-- apply scale factor
	local s = scale or 1.0
	for bi,body in pairs(physics.data) do
		for fi,fixture in ipairs(body) do
			for ci,coordinate in ipairs(fixture.shape) do
				fixture.shape[ci] = s * coordinate
			end
		end
	end
	
	function physics:get(name)
		return unpack(self.data[name])
	end
	
	return physics;
end


